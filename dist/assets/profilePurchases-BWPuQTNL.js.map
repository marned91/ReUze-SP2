{"version":3,"file":"profilePurchases-BWPuQTNL.js","sources":["../../src/script/router/views/profilePurchases.mjs"],"sourcesContent":["import { authGuard } from '../../utils/authGuard.mjs'\nimport { fetchProfileWins } from '../../api/profile.mjs'\nimport {\n  showSkeletonLoader,\n  hideSkeletonLoader,\n} from '../../utils/skeletonLoader.mjs'\n\nauthGuard()\n\n/**\n * Displays the user's winning history on their profile page.\n *\n * This function fetches the user's winning listings from the server using the `fetchProfileWins` function. If the user\n * has no wins, it displays a message encouraging them to browse listings and start bidding. If there are wins, it creates\n * a card for each winning listing, showing the image, title, date of the win, and the final bid amount.\n *\n * @async\n * @returns {void} - This function does not return any value.\n *\n * @example\n * // This will display the user's winning history on their profile page.\n * displayProfileWinningHistory();\n */\nasync function displayProfileWinningHistory() {\n  const userInfo = JSON.parse(localStorage.getItem('user'))\n  const username = userInfo?.name\n  const profileWinsContainer = document.getElementById('profile-wins')\n  profileWinsContainer.innerHTML = ''\n\n  showSkeletonLoader()\n\n  try {\n    await new Promise((resolve) => setTimeout(resolve, 3000))\n    const wins = await fetchProfileWins(username)\n\n    if (wins.length === 0) {\n      const noWinsContainer = document.createElement('div')\n\n      const noWinsMessage = document.createElement('p')\n      noWinsMessage.textContent =\n        'No wins yet! Browse listings and start bidding on items: '\n      noWinsMessage.classList.add('font-small', 'mb-6')\n      noWinsContainer.appendChild(noWinsMessage)\n\n      const noWinsButton = document.createElement('a')\n      noWinsButton.href = '/'\n      noWinsButton.classList.add(\n        'bg-accent-dark',\n        'font-mediumFont',\n        'text-white',\n        'rounded-3xl',\n        'py-3',\n        'px-5',\n        'w-fit',\n        'transition',\n        'duration-300',\n        'ease-out',\n        'hover:scale-105',\n        'block',\n      )\n      noWinsButton.textContent = 'Browse Categories'\n\n      noWinsContainer.appendChild(noWinsButton)\n      profileWinsContainer.appendChild(noWinsContainer)\n\n      return\n    }\n\n    wins.forEach((win) => {\n      const winCard = document.createElement('div')\n      winCard.classList.add(\n        'bg-white',\n        'rounded-lg',\n        'shadow-xl',\n        'overflow-hidden',\n        'p-4',\n        'bg-white',\n        'flex',\n        'flex-col',\n        'justify-between',\n        'border',\n        'mt-5',\n      )\n\n      const listing = win\n      const image =\n        listing?.media?.length > 0\n          ? listing.media[0].url\n          : '/assets/default-listing-image.png'\n      const imgElement = document.createElement('img')\n      imgElement.src = image\n      imgElement.alt =\n        listing?.media[0]?.alt || listing?.title || 'Listing Image'\n      imgElement.classList.add('w-full', 'h-48', 'object-cover')\n      winCard.appendChild(imgElement)\n\n      const title = document.createElement('h3')\n      title.textContent = listing?.title || 'No listing title'\n      title.classList.add('font-bold', 'text-xl', 'mt-4')\n      winCard.appendChild(title)\n\n      const winTime = document.createElement('p')\n      const winDate = new Date(listing.created)\n      winTime.textContent = `Won on: ${winDate.toLocaleString()}`\n      winTime.classList.add('text-sm', 'mt-2', 'italic', 'text-gray-600')\n      winCard.appendChild(winTime)\n\n      const highestBid =\n        Array.isArray(listing.bids) && listing.bids.length\n          ? Math.max(...listing.bids.map((bid) => bid.amount))\n          : 0\n      const finalBid = document.createElement('p')\n      finalBid.textContent = `Bought for: $${highestBid}`\n      finalBid.classList.add('font-semibold', 'mt-2')\n      winCard.appendChild(finalBid)\n\n      profileWinsContainer.appendChild(winCard)\n    })\n  } catch (error) {\n  } finally {\n    hideSkeletonLoader()\n  }\n}\n\ndisplayProfileWinningHistory()\n"],"names":["authGuard","displayProfileWinningHistory","username","profileWinsContainer","showSkeletonLoader","resolve","wins","fetchProfileWins","noWinsContainer","noWinsMessage","noWinsButton","win","winCard","listing","image","imgElement","title","winTime","winDate","highestBid","bid","finalBid","hideSkeletonLoader"],"mappings":"2MAOAA,EAAS,EAgBT,eAAeC,GAA+B,CAE5C,MAAMC,EADW,KAAK,MAAM,aAAa,QAAQ,MAAM,CAAC,GAC7B,KACrBC,EAAuB,SAAS,eAAe,cAAc,EACnEA,EAAqB,UAAY,GAEjCC,EAAkB,EAElB,GAAI,CACF,MAAM,IAAI,QAASC,GAAY,WAAWA,EAAS,GAAI,CAAC,EACxD,MAAMC,EAAO,MAAMC,EAAiBL,CAAQ,EAE5C,GAAII,EAAK,SAAW,EAAG,CACrB,MAAME,EAAkB,SAAS,cAAc,KAAK,EAE9CC,EAAgB,SAAS,cAAc,GAAG,EAChDA,EAAc,YACZ,4DACFA,EAAc,UAAU,IAAI,aAAc,MAAM,EAChDD,EAAgB,YAAYC,CAAa,EAEzC,MAAMC,EAAe,SAAS,cAAc,GAAG,EAC/CA,EAAa,KAAO,IACpBA,EAAa,UAAU,IACrB,iBACA,kBACA,aACA,cACA,OACA,OACA,QACA,aACA,eACA,WACA,kBACA,OACR,EACMA,EAAa,YAAc,oBAE3BF,EAAgB,YAAYE,CAAY,EACxCP,EAAqB,YAAYK,CAAe,EAEhD,MACN,CAEIF,EAAK,QAASK,GAAQ,CACpB,MAAMC,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAU,IAChB,WACA,aACA,YACA,kBACA,MACA,WACA,OACA,WACA,kBACA,SACA,MACR,EAEM,MAAMC,EAAUF,EACVG,EACJD,GAAS,OAAO,OAAS,EACrBA,EAAQ,MAAM,CAAC,EAAE,IACjB,oCACAE,EAAa,SAAS,cAAc,KAAK,EAC/CA,EAAW,IAAMD,EACjBC,EAAW,IACTF,GAAS,MAAM,CAAC,GAAG,KAAOA,GAAS,OAAS,gBAC9CE,EAAW,UAAU,IAAI,SAAU,OAAQ,cAAc,EACzDH,EAAQ,YAAYG,CAAU,EAE9B,MAAMC,EAAQ,SAAS,cAAc,IAAI,EACzCA,EAAM,YAAcH,GAAS,OAAS,mBACtCG,EAAM,UAAU,IAAI,YAAa,UAAW,MAAM,EAClDJ,EAAQ,YAAYI,CAAK,EAEzB,MAAMC,EAAU,SAAS,cAAc,GAAG,EACpCC,EAAU,IAAI,KAAKL,EAAQ,OAAO,EACxCI,EAAQ,YAAc,WAAWC,EAAQ,eAAc,CAAE,GACzDD,EAAQ,UAAU,IAAI,UAAW,OAAQ,SAAU,eAAe,EAClEL,EAAQ,YAAYK,CAAO,EAE3B,MAAME,EACJ,MAAM,QAAQN,EAAQ,IAAI,GAAKA,EAAQ,KAAK,OACxC,KAAK,IAAI,GAAGA,EAAQ,KAAK,IAAKO,GAAQA,EAAI,MAAM,CAAC,EACjD,EACAC,EAAW,SAAS,cAAc,GAAG,EAC3CA,EAAS,YAAc,gBAAgBF,CAAU,GACjDE,EAAS,UAAU,IAAI,gBAAiB,MAAM,EAC9CT,EAAQ,YAAYS,CAAQ,EAE5BlB,EAAqB,YAAYS,CAAO,CACzC,CAAA,CACF,MAAe,CAClB,QAAY,CACRU,EAAkB,CACtB,CACA,CAEArB,EAA4B"}