{"version":3,"file":"doFetch-B21xXzj5.js","sources":["../../src/script/api/constants.mjs","../../src/script/api/doFetch.mjs"],"sourcesContent":["export const API_BASE = 'https://v2.api.noroff.dev'\n\nexport const API_AUTH = `${API_BASE}/auth`\n\nexport const API_AUTH_LOGIN = `${API_AUTH}/login`\n\nexport const API_AUTH_REGISTER = `${API_AUTH}/register`\n\nexport const API_AUCTION = `${API_BASE}/auction/listings`\n\nexport const API_AUCTION_PROFILE = `${API_BASE}/auction/profiles`\n\nexport const API_KEY = '3fc37fe0-a306-47da-a608-cf5196d46e16'\n","import { API_KEY } from './constants.mjs'\n\n/**\n * Performs a fetch request with authentication and required headers.\n *\n * This reusable function simplifies API calls by automatically handling authentication tokens,\n * API keys, and JSON responses. It can be used for various API interactions, such as fetching data,\n * creating, updating, or deleting resources.\n *\n * @param {string} url - The API endpoint to fetch data from.\n * @param {Object} [options={}] - Optional settings for the fetch request (e.g., method, headers, body).\n * @param {string} [options.method='GET'] - HTTP request method (e.g., 'GET', 'POST', 'PUT', 'DELETE').\n * @param {Object} [options.headers={}] - Additional headers for the request.\n * @param {Object} [options.body] - Request body, if applicable.\n * @returns {Promise<Object|null>} A promise that resolves to the response data, or null if there is no content.\n * @throws {Error} If the fetch request fails.\n *\n * @example\n * // Example: Fetching data from an API\n * const url = \"https://api.example.com/data\";\n * try {\n *   const responseData = await doFetch(url);\n *   console.log(responseData);\n * } catch (error) {\n *   console.error(\"Fetch failed\", error);\n * }\n */\n\nexport async function doFetch(url, options = {}) {\n  try {\n    const token = localStorage.getItem('token')\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n      'X-Noroff-API-Key': API_KEY,\n      ...options.headers,\n    }\n    const response = await fetch(url, { ...options, headers })\n\n    if (response.status === 204) {\n      return null\n    }\n\n    if (response.ok) {\n      const { data } = await response.json()\n      console.log('API Response:', data)\n      return data\n    }\n  } catch (error) {\n    console.error('Error fetching data:', error)\n    throw error\n  }\n}\n"],"names":["API_BASE","API_AUTH","API_AUTH_LOGIN","API_AUTH_REGISTER","API_AUCTION","API_AUCTION_PROFILE","API_KEY","doFetch","url","options","headers","response","data","error"],"mappings":"AAAO,MAAMA,EAAW,4BAEXC,EAAW,GAAGD,CAAQ,QAEtBE,EAAiB,GAAGD,CAAQ,SAE5BE,EAAoB,GAAGF,CAAQ,YAE/BG,EAAc,GAAGJ,CAAQ,oBAEzBK,EAAsB,GAAGL,CAAQ,oBAEjCM,EAAU,uCCgBhB,eAAeC,EAAQC,EAAKC,EAAU,GAAI,CAC/C,GAAI,CAGF,MAAMC,EAAU,CACd,eAAgB,mBAChB,cAAe,UAJH,aAAa,QAAQ,OAAO,CAIV,GAC9B,mBAAoBJ,EACpB,GAAGG,EAAQ,OACjB,EACUE,EAAW,MAAM,MAAMH,EAAK,CAAE,GAAGC,EAAS,QAAAC,CAAS,CAAA,EAEzD,GAAIC,EAAS,SAAW,IACtB,OAAO,KAGT,GAAIA,EAAS,GAAI,CACf,KAAM,CAAE,KAAAC,CAAI,EAAK,MAAMD,EAAS,KAAI,EACpC,eAAQ,IAAI,gBAAiBC,CAAI,EAC1BA,CACb,CACG,OAAQC,EAAO,CACd,cAAQ,MAAM,uBAAwBA,CAAK,EACrCA,CACV,CACA"}