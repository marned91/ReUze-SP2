{"version":3,"mappings":"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","names":["updateHeader","mobileProfileElement","profileElement","signupElement","mobileSignUpElement","homeElement","publicHomeElement","logoutElement","loginElement","categoriesElement","setupMenuToggle","menuToggle","mobileMenu","event","handleAlert","message","type","functionToCall","timeout","alertClasses","alertDiv","onLogout","setLogoutListener","router","pathname","category","__vitePreload"],"ignoreList":[],"sources":["../../src/script/global/updateHeader.mjs","../../src/script/global/menuToggle.mjs","../../src/script/global/handleAlerts.mjs","../../src/script/global/logout.mjs","../../src/script/router/index.mjs","../../src/main.mjs"],"sourcesContent":["/**\n * Updates the visibility of header elements based on the user's login status.\n *\n * This function checks if a valid login token exists in `localStorage`.\n * - If the user is logged in (token exists), it shows the user's profile options and logout button, while hiding the signup, login, home, and categories options.\n * - If no token is found (user is not logged in), it hides the user's profile options and logout button, while showing the signup, login, home, and categories options.\n *\n * @returns {void}\n *\n * @example\n * updateHeader();\n * // Updates the header elements based on the login status of the user.\n */\nexport function updateHeader() {\n  const mobileProfileElement = document.getElementById('profile-mobile')\n  const profileElement = document.getElementById('profile')\n  const signupElement = document.getElementById('signup')\n  const mobileSignUpElement = document.getElementById('signup-mobile')\n  const homeElement = document.getElementById('home')\n  const publicHomeElement = document.getElementById('public-home')\n  const logoutElement = document.getElementById('logout')\n  const loginElement = document.getElementById('login')\n  const categoriesElement = document.getElementById('public-categories')\n\n  const loginToken = localStorage.getItem('token')\n\n  if (loginToken) {\n    signupElement.classList.add('hidden')\n    mobileSignUpElement.classList.add('hidden')\n    loginElement.classList.add('hidden')\n    publicHomeElement.classList.add('hidden')\n    categoriesElement.classList.add('hidden')\n\n    homeElement.classList.remove('hidden')\n    profileElement.classList.remove('hidden')\n    mobileProfileElement.classList.remove('hidden')\n    logoutElement.classList.remove('hidden')\n  } else {\n    signupElement.classList.remove('hidden')\n    mobileSignUpElement.classList.remove('hidden')\n    loginElement.classList.remove('hidden')\n    publicHomeElement.classList.remove('hidden')\n    categoriesElement.classList.remove('hidden')\n\n    homeElement.classList.add('hidden')\n    profileElement.classList.add('hidden')\n    mobileProfileElement.classList.add('hidden')\n    logoutElement.classList.add('hidden')\n  }\n}\n","/**\n * Sets up the functionality to toggle the mobile menu visibility.\n *\n * This function adds a click event listener to the element with the ID `menu-toggle`\n * to toggle the visibility of the mobile menu (with the ID `mobile-menu`) by adding or removing the `hidden` class.\n * Additionally, it sets up an event listener on the document to close the mobile menu if the user clicks outside of it.\n *\n * @returns {void}\n *\n * @example\n * setupMenuToggle();\n * // Sets up the mobile menu toggle functionality.\n */\nexport function setupMenuToggle() {\n  const menuToggle = document.getElementById('menu-toggle')\n  const mobileMenu = document.getElementById('mobile-menu')\n\n  if (!menuToggle || !mobileMenu) return\n\n  // Toggle menu visibility\n  menuToggle.addEventListener('click', () => {\n    mobileMenu.classList.toggle('hidden')\n  })\n\n  // Close menu when clicking outside\n  document.addEventListener('click', (event) => {\n    if (\n      !mobileMenu.contains(event.target) &&\n      !menuToggle.contains(event.target)\n    ) {\n      mobileMenu.classList.add('hidden')\n    }\n  })\n}\n","/**\n * Displays an alert message with a specified type and optional callback.\n *\n * This function creates an alert box with the provided message and displays it on the screen.\n * The alert box will automatically disappear after a specified timeout. Optionally, a callback function can be executed after the alert is removed.\n *\n * @param {string} message - The message to display in the alert box.\n * @param {('info'|'success'|'error')} [type='info'] - The type of alert, determining its style.\n *   Possible values are 'info', 'success', and 'error'. Default is 'info'.\n * @param {Function|null} [functionToCall=null] - An optional callback function to be called after the alert disappears.\n * @param {number} [timeout=1000] - The time in milliseconds after which the alert will be removed. Default is 1000ms (1 second).\n * @returns {void}\n *\n * @example\n * handleAlert(\"Item deleted successfully!\", \"success\", () => { console.log(\"Alert closed.\"); }, 2000);\n * // Displays a success alert for 2 seconds, and then logs \"Alert closed.\"\n */\nexport function handleAlert(\n  message,\n  type = 'info',\n  functionToCall = null,\n  timeout = 1000,\n) {\n  const alertClasses = {\n    info: 'bg-[#E0EFF5] border-[#CCE1EA] text-black shadow-xl',\n    success: 'bg-[#A5D5E7] border-[#B7DBE9] text-accent-dark shadow-xl',\n    error: 'bg-[#7A8080] border-[#989F9F] text-white shadow-xl',\n  }\n\n  const alertDiv = document.createElement('div')\n  alertDiv.className = `w-full max-w-md mx-auto p-4 border rounded-lg shadow-md ${alertClasses[type]}`\n  alertDiv.textContent = message\n\n  const alertContainer = document.getElementById('alert-container')\n  alertContainer.appendChild(alertDiv)\n\n  setTimeout(() => {\n    alertDiv.remove()\n    if (functionToCall) functionToCall()\n  }, timeout)\n}\n","import { handleAlert } from './handleAlerts.mjs'\n\n/**\n * Logs the user out by removing authentication data from localStorage and redirecting to the login page.\n *\n * This function clears the stored authentication token and user data from localStorage, then displays an alert notifying the user they have been logged out.\n * After a brief delay, the user is redirected to the login page.\n *\n * @returns {void}\n *\n * @example\n * onLogout();\n * // Removes the user's token and data from localStorage, displays a logout alert, and redirects to the login page.\n */\nasync function onLogout() {\n  localStorage.removeItem('token')\n  localStorage.removeItem('user')\n\n  handleAlert('You have been logged out', 'info')\n\n  setTimeout(() => (window.location.href = '/auth/login/'), 2000)\n}\n\n/**\n * Sets up a click event listener on the logout element to trigger the logout process.\n *\n * This function finds the element with the ID `logout` and adds a click event listener.\n * When clicked, it prevents the default behavior, stops the event propagation, and calls the `onLogout` function to log the user out.\n * The listener is set to trigger only once.\n *\n * @returns {void}\n *\n * @example\n * setLogoutListener();\n * // Sets up a logout event listener on the element with the ID \"logout\" to trigger the logout process.\n */\nexport function setLogoutListener() {\n  const logoutElement = document.querySelector('#logout')\n  logoutElement.classList.add('cursor-pointer')\n\n  if (logoutElement) {\n    logoutElement.addEventListener(\n      'click',\n      (event) => {\n        event.preventDefault()\n        event.stopImmediatePropagation()\n        onLogout()\n      },\n      { once: true },\n    )\n  }\n}\n","// This function controls which JavaScript file is loaded on which page\nexport default async function router(pathname = window.location.pathname) {\n  console.log('Router is running, pathname:', window.location.pathname)\n\n  const urlParams = new URLSearchParams(window.location.search)\n  const category = urlParams.get('tag')\n\n  const normalizedPath = pathname === '/index.html' ? '/' : pathname\n  switch (normalizedPath) {\n    case '/': // Home logged-in users\n    case '':\n      await import('./views/home.mjs')\n      break\n    case '/public/': // Home non-logged-in users\n      await import('./views/publicHome.mjs')\n      break\n    case '/public/categories/index.html':\n    case '/public/categories/': // Categories for non-logged-in users\n      await import('./views/publicCategories.mjs')\n      break\n    case '/auth/login/index.html': // Login\n    case '/auth/login/':\n      console.log('Loading login.mjs')\n      await import('./views/login.mjs')\n      break\n    case '/auth/register/index.html': // Register\n    case '/auth/register/':\n      await import('./views/register.mjs')\n      break\n    case '/profile/': // Profile logged-in users\n      await import('./views/profile.mjs')\n      break\n    case '/profile/update/': // Update profile logged-in users\n      await import('./views/profileUpdate.mjs')\n      break\n    case '/profile/purchases/':\n      await import('./views/profilePurchases.mjs')\n      break\n    case '/listings/create/': // Create new listing logged-in users\n      await import('./views/listingCreate.mjs')\n      break\n    case '/listings/view/index.html': // View listing. Logged-in users can place bids, non-logged-in users will not get this option\n    case '/listings/view/':\n      await import('./views/listingView.mjs')\n      break\n    case '/listings/search/index.html': // View listings search results\n    case '/listings/search/':\n      await import('./views/listingsSearchResult.mjs')\n      break\n    case '/listings/index.html': // All listings per category\n    case '/listings/':\n      if (category) {\n        const validCategories = [\n          'sport',\n          'fashion',\n          'interior',\n          'art',\n          'decor',\n          'vintage',\n          'other',\n        ]\n        if (validCategories.includes(category.toLowerCase())) {\n          await import('./views/listingsPerCategory.mjs')\n        }\n      }\n      break\n  }\n}\n","import './css/styles.css'\nimport { updateHeader } from './script/global/updateHeader.mjs'\nimport { setupMenuToggle } from './script/global/menuToggle.mjs'\nimport { setLogoutListener } from './script/global/logout.mjs'\nimport router from './script/router'\n\nconsole.log('main.mjs is loading - hello')\n\nupdateHeader()\nsetupMenuToggle()\nsetLogoutListener()\nawait router(window.location.pathname)\n"],"file":"assets/main-BcUkKGQ8.js"}