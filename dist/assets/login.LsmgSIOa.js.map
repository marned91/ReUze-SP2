{"version":3,"file":"login.LsmgSIOa.js","sources":["../../src/script/router/views/login.mjs"],"sourcesContent":["import { handleAlert } from '../../global/handleAlerts.mjs'\nimport { login } from '../../api/auth.mjs'\n\n/**\n * Handles the login form submission.\n *\n * This function is triggered when the user submits the login form. It prevents the default form submission,\n * extracts the form data (email and password), and sends it to the `login` function for authentication.\n * It updates the UI to indicate loading, displays success or error alerts based on the result, and redirects\n * the user to the homepage after a successful login.\n *\n * @async\n * @param {Event} event - The submit event triggered when the user attempts to log in.\n * @returns {void} - This function does not return any value.\n *\n * @example\n * // This will handle the login form submission when the user clicks the login button.\n * loginForm.addEventListener('submit', onLogin);\n */\nasync function onLogin(event) {\n  event.preventDefault()\n\n  const form = event.target\n  const fieldset = form.querySelector('fieldset')\n  const button = form.querySelector('button')\n  const originalButtonText = button.textContent\n\n  const formData = new FormData(form)\n\n  const email = formData.get('email')\n  const password = formData.get('password')\n\n  fieldset.disabled = true\n  button.textContent = 'Logging In...'\n\n  try {\n    const data = await login({ email, password })\n\n    if (!data || (data.errors && data.errors.length > 0)) {\n      const errorMessage =\n        data?.errors?.[0]?.message ||\n        'Invalid email or password. Please try again'\n      handleAlert(errorMessage, 'error')\n      return\n    }\n\n    handleAlert('Login successful!', 'success')\n    form.reset()\n\n    setTimeout(() => (window.location.pathname = '/'), 2000)\n  } catch (error) {\n    handleAlert(`Login failed: ${error.message}`, 'error')\n  } finally {\n    fieldset.disabled = false\n    button.textContent = originalButtonText\n  }\n}\n\nconst form = document.forms.login\nform.addEventListener('submit', onLogin)\n"],"names":["onLogin","event","form","fieldset","button","originalButtonText","formData","email","password","data","login","errorMessage","handleAlert","error"],"mappings":"gHAmBA,eAAeA,EAAQC,EAAO,CAC5BA,EAAM,eAAc,EAEpB,MAAMC,EAAOD,EAAM,OACbE,EAAWD,EAAK,cAAc,UAAU,EACxCE,EAASF,EAAK,cAAc,QAAQ,EACpCG,EAAqBD,EAAO,YAE5BE,EAAW,IAAI,SAASJ,CAAI,EAE5BK,EAAQD,EAAS,IAAI,OAAO,EAC5BE,EAAWF,EAAS,IAAI,UAAU,EAExCH,EAAS,SAAW,GACpBC,EAAO,YAAc,gBAErB,GAAI,CACF,MAAMK,EAAO,MAAMC,EAAM,CAAE,MAAAH,EAAO,SAAAC,CAAU,CAAA,EAE5C,GAAI,CAACC,GAASA,EAAK,QAAUA,EAAK,OAAO,OAAS,EAAI,CACpD,MAAME,EACJF,GAAM,SAAS,CAAC,GAAG,SACnB,8CACFG,EAAYD,EAAc,OAAO,EACjC,MACN,CAEIC,EAAY,oBAAqB,SAAS,EAC1CV,EAAK,MAAK,EAEV,WAAW,IAAO,OAAO,SAAS,SAAW,IAAM,GAAI,CACxD,OAAQW,EAAO,CACdD,EAAY,iBAAiBC,EAAM,OAAO,GAAI,OAAO,CACzD,QAAY,CACRV,EAAS,SAAW,GACpBC,EAAO,YAAcC,CACzB,CACA,CAEA,MAAMH,EAAO,SAAS,MAAM,MAC5BA,EAAK,iBAAiB,SAAUF,CAAO"}