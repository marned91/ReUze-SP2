{"version":3,"file":"listingCreate-DHT0wc03.js","sources":["../../src/script/utils/tagsHandling.mjs","../../src/script/router/views/listingCreate.mjs"],"sourcesContent":["const tags = {\n  Art: /\\b(painting|sculpture|poster|statue|picture|art|wallpaper|mural|drawing|illustration|sketch|portrait|abstract|contemporary|gallery|artist)\\b/i,\n  Fashion:\n    /\\b(fashion|clothes|clothing|shoes|jacket|hat|cap|pants|blouse|shirt|parka|glasses|sunglasses|sweater|coat(s)?|sneakers|scarf|scarves|shorts|purse|bag|dress|skirt|blazer|leggings|boots|jewelry|watch)\\b/i,\n  Interior:\n    /\\b(interior|sofa(s)?|chair(s)?|table(s)?|lounge(s)?|carpet(s)?|shelf|shelves|lamp(s)?|curtain(s)?|rug(s)?|cushion(s)?|armchair|bookshelf|cabinet|mug(s)?)\\b/i,\n  Decor:\n    /\\b(decor|vase(s)?|dish(es)?|tablecloth(S)?|glass|pot(s)?|candlestick(s)?|coaster(s)?|clock(s)?|cushion(s)?|candle(s)?|mirror(s)?|plant(s)?|stool(s)?|ceramic(s)?|globe(s)?|wallpaper|wall\\s?art|baskets|tapestry)\\b/i,\n  Sport:\n    /\\b(sport(s)?|ski|skiing|skiis|snowboard(s)?|sneakers|canoe|canoes|paddle(s)?|hiking|weights|treadmill(s)?|boxing|gym|fitness|exercise|workout|yoga|running|swimming|cycling|paddleboard|surf(ing)?|skate-board(s)?|helmet(s)?)\\b/i,\n  vintage:\n    /\\b(vintage|retro|old|antique|classic|nostalgia|mid-century|heritage|throwback)\\b/i,\n  other:\n    /\\b(car|headset|electronics|tablet|phone|camera|digital-camera|computer|game(s)?|toy(s)?|speaker(s)?|stereo|electric-bicycle|electric-scooter|scooter|costume(s)?|ipad|airpods|phone-case|Mac|android|apple|windows|guitar|electric|instrument|keyboard|piano)\\b/i,\n}\n\n/**\n * Tags a listing based on keywords found in its title or description.\n * The function matches predefined tags (e.g., Art, Fashion, etc.) with regular expressions\n * and returns a list of categories that apply to the listing.\n *\n * @param {string} title - The title of the listing.\n * @param {string} description - The description of the listing.\n * @returns {string[]} An array of categories (tags) that match the title or description.\n */\nexport function tagCategories(title, description) {\n  const tagCategories = []\n\n  for (const [tag, regex] of Object.entries(tags)) {\n    if (regex.test(title) || regex.test(description)) {\n      tagCategories.push(tag.toLowerCase())\n    }\n  }\n  return tagCategories\n}\n","import { authGuard } from '../../utils/authGuard.mjs'\nimport { createListing } from '../../api/listings.mjs'\nimport { tagCategories } from '../../utils/tagsHandling.mjs'\nimport { handleAlert } from '../../global/handleAlerts.mjs'\n\nauthGuard()\n\nconst form = document.querySelector('#create-listing-form')\n\nform.addEventListener('submit', async (event) => {\n  event.preventDefault()\n\n  const title = form.title.value.trim()\n  const description = form.description.value.trim()\n  const mediaUrl = form.mediaUrl.value.trim()\n  const deadline = new Date(form.deadline.value).toISOString()\n\n  const tags = tagCategories ? tagCategories(title, description) : []\n\n  const listingData = {\n    title,\n    description,\n    tags,\n    media: mediaUrl ? [{ url: mediaUrl, alt: title }] : [],\n    endsAt: deadline,\n  }\n\n  const fieldset = form.querySelector('fieldset')\n  const button = form.querySelector('button')\n  const originalButtonText = button.textContent\n\n  fieldset.disabled = true\n  button.textContent = 'Creating Listing...'\n\n  try {\n    const response = await createListing(listingData)\n\n    if (response) {\n      handleAlert('Listing created successfully!', 'success')\n      setTimeout(() => (window.location.pathname = /profile/), 2000)\n    }\n  } catch (error) {\n    handleAlert('Failed to create listing. Please try again.', 'error')\n  } finally {\n    fieldset.disabled = false\n    button.textContent = originalButtonText\n  }\n})\n\nconst descriptionInput = document.getElementById('description')\nconst charCount = document.getElementById('char-count')\n\ndescriptionInput.addEventListener('input', () => {\n  const length = descriptionInput.value.length\n  charCount.textContent = `${length} / 280`\n})\n"],"names":["tags","tagCategories","title","description","tag","regex","authGuard","form","event","mediaUrl","deadline","listingData","fieldset","button","originalButtonText","createListing","handleAlert","descriptionInput","charCount","length"],"mappings":"4JAAA,MAAMA,EAAO,CACX,IAAK,gJACL,QACE,4MACF,SACE,+JACF,MACE,uNACF,MACE,oOACF,QACE,oFACF,MACE,kQACJ,EAWO,SAASC,EAAcC,EAAOC,EAAa,CAChD,MAAMF,EAAgB,CAAA,EAEtB,SAAW,CAACG,EAAKC,CAAK,IAAK,OAAO,QAAQL,CAAI,GACxCK,EAAM,KAAKH,CAAK,GAAKG,EAAM,KAAKF,CAAW,IAC7CF,EAAc,KAAKG,EAAI,YAAa,CAAA,EAGxC,OAAOH,CACT,CC7BAK,EAAS,EAET,MAAMC,EAAO,SAAS,cAAc,sBAAsB,EAE1DA,EAAK,iBAAiB,SAAU,MAAOC,GAAU,CAC/CA,EAAM,eAAc,EAEpB,MAAMN,EAAQK,EAAK,MAAM,MAAM,KAAI,EAC7BJ,EAAcI,EAAK,YAAY,MAAM,KAAI,EACzCE,EAAWF,EAAK,SAAS,MAAM,KAAI,EACnCG,EAAW,IAAI,KAAKH,EAAK,SAAS,KAAK,EAAE,YAAW,EAEpDP,EAAOC,EAAgBA,EAAcC,EAAOC,CAAW,EAAI,CAAA,EAE3DQ,EAAc,CAClB,MAAAT,EACA,YAAAC,EACA,KAAAH,EACA,MAAOS,EAAW,CAAC,CAAE,IAAKA,EAAU,IAAKP,CAAO,CAAA,EAAI,CAAE,EACtD,OAAQQ,CACZ,EAEQE,EAAWL,EAAK,cAAc,UAAU,EACxCM,EAASN,EAAK,cAAc,QAAQ,EACpCO,EAAqBD,EAAO,YAElCD,EAAS,SAAW,GACpBC,EAAO,YAAc,sBAErB,GAAI,CACe,MAAME,EAAcJ,CAAW,IAG9CK,EAAY,gCAAiC,SAAS,EACtD,WAAW,IAAO,OAAO,SAAS,SAAW,UAAY,GAAI,EAEhE,MAAe,CACdA,EAAY,8CAA+C,OAAO,CACtE,QAAY,CACRJ,EAAS,SAAW,GACpBC,EAAO,YAAcC,CACzB,CACA,CAAC,EAED,MAAMG,EAAmB,SAAS,eAAe,aAAa,EACxDC,EAAY,SAAS,eAAe,YAAY,EAEtDD,EAAiB,iBAAiB,QAAS,IAAM,CAC/C,MAAME,EAASF,EAAiB,MAAM,OACtCC,EAAU,YAAc,GAAGC,CAAM,QACnC,CAAC"}